plugins {
    id 'java'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.34'
}

group = 'co.sqasa'
version = '1.0-SNAPSHOT'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

repositories { mavenCentral() }

sourceSets {
    test {
        java.srcDir 'test/java'
        resources.srcDir 'test/resources'
    }
}

dependencies {
    testImplementation "net.serenity-bdd:serenity-cucumber:4.2.34"
    testImplementation "net.serenity-bdd:serenity-junit:4.2.34"
    testImplementation "net.serenity-bdd:serenity-screenplay-webdriver:4.2.34"
    testImplementation "org.assertj:assertj-core:3.25.3"
    testImplementation "junit:junit:4.13.2"
}

tasks.withType(JavaCompile).configureEach { options.encoding = 'UTF-8' }

test {
    useJUnit()                          // JUnit4; Gradle detecta @RunWith
    testLogging.showStandardStreams = true
    // Si algún día cambias el nombre del runner y no termina en *Test:
    // include '**/*Runner*.class', '**/*Test.class'
    finalizedBy 'aggregate'             // genera el reporte Serenity al final
    systemProperties System.getProperties()   // propaga file.encoding a la JVM de test
    ignoreFailures = true   // continúa el build aunque haya tests Failed
    finalizedBy 'aggregate' // genera el HTML de Serenity pase lo que pase  // propaga file.encoding a la JVM de test
}

serenity { reports = ["single-page-html"] }
